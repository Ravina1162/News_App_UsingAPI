{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import {Box, Typography, Button, TextField, Link} from '@mui/material'\n// import rpaper from './rpaper.jpg'\n// import google from './google.png'\n// import { auth, provider } from './config'\n// import { signInWithPopup } from 'firebase/auth'\n// import { toast, ToastContainer } from 'react-toastify'\n// import 'react-toastify/dist/ReactToastify.css'\n// import { getAuth } from 'firebase/auth'\n// import { createUserWithEmailAndPassword } from 'firebase/auth'\n\n// const Signup = () => {\n\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//     const [value,setValue] = useState('')\n//     const navigate = useNavigate();\n\n//     const handleClick = () =>{\n//         signInWithPopup(auth, provider).then((data)=>{\n//             console.log(data.user)\n//             setValue(data.user.email)\n//             localStorage.setItem(\"email\",data.user.email)\n//             navigate('/Home')\n//             if((error) => {\n//                 console.log('Error signing in with Google:', error);\n//               });\n\n//         })\n//     }\n\n//     const handleSignup = (e) => {\n//       e.preventDefault();\n//        const authentiaion = getAuth()\n//        createUserWithEmailAndPassword(authentiaion, email, password,true)\n//         .then((userCredential) => {\n\n//           // Signup successful\n//           const user = userCredential.user;\n//           console.log('Signup successful:', user);\n//           navigate('/Home')\n//           // Redirect to home or do something else\n//         })\n//         .catch((error) => {\n//           // Signup error\n//           setError(error.message);\n//           if (error.code === 'auth/email-already-in-use') {\n//             toast.error('Email already exists');\n\n//           }\n//           console.log('Signup error h baby:', error);\n//         });\n//     };\n\n//     useEffect(()=>{\n//         setValue(localStorage.getItem('email'))\n//         // storing email\n//     },[]);\n\n//   return (\n//     <Box\n//       sx={{\n//         backgroundImage: `url(${rpaper})`,\n//         backgroundSize: 'cover',\n//         backgroundRepeat: 'no-repeat',\n//         backgroundPosition: 'center',\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}\n//       component=\"div\"\n//     >\n//       <Box\n//         sx={{\n//           backgroundColor: 'rgba(255, 255, 255, 0.7)',\n//           padding: '20px',\n//           borderRadius: '20px',\n//         }}\n//       >\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           SignUp\n//         </Typography>\n//         <form onSubmit={handleSignup}>\n//           <TextField\n//             id=\"email\"\n//             label=\"Email\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           <TextField\n//             id=\"password\"\n//             label=\"Password\"\n//             variant=\"outlined\"\n//             type=\"password\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <Button\n//           variant=\"contained\" fullWidth type=\"submit\">\n//             Signup\n//             <ToastContainer/>\n//           </Button>\n//         </form>\n//         <Typography variant=\"body1\" align=\"center\" mt={2}>\n//           Already have an account? <Link href=\"Login\">Login</Link>\n//         </Typography>\n//         <Typography variant=\"body1\" align=\"center\" mt={2}>\n//           Or\n//           {\n//           <Button\n//             onClick={ handleClick }\n//             variant=\"outlined\"\n//             fullWidth\n//             sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mt: 2 }}\n//           >\n//             <img src={google} alt=\"Google Logo\" sx={{ width: 20, height: 20, mr: 1 }} style={{ marginRight: '8px' }} />\n//             Signin with Google\n//           </Button>\n//                 }\n//         </Typography>\n//       </Box>\n\n//     </Box>\n//   )\n// }\n\n// export default Signup","map":{"version":3,"names":[],"sources":["C:/Project/New folder (2)/news/src/components/Signup.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import {Box, Typography, Button, TextField, Link} from '@mui/material'\r\n// import rpaper from './rpaper.jpg'\r\n// import google from './google.png'\r\n// import { auth, provider } from './config'\r\n// import { signInWithPopup } from 'firebase/auth'\r\n// import { toast, ToastContainer } from 'react-toastify'\r\n// import 'react-toastify/dist/ReactToastify.css'\r\n// import { getAuth } from 'firebase/auth'\r\n// import { createUserWithEmailAndPassword } from 'firebase/auth'\r\n\r\n// const Signup = () => {\r\n\r\n\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//     const [value,setValue] = useState('')\r\n//     const navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n//     const handleClick = () =>{\r\n//         signInWithPopup(auth, provider).then((data)=>{\r\n//             console.log(data.user)\r\n//             setValue(data.user.email)\r\n//             localStorage.setItem(\"email\",data.user.email)\r\n//             navigate('/Home')\r\n//             if((error) => {\r\n//                 console.log('Error signing in with Google:', error);\r\n//               });\r\n\r\n//         })\r\n//     }\r\n\r\n//     const handleSignup = (e) => {\r\n//       e.preventDefault();\r\n//        const authentiaion = getAuth()\r\n//        createUserWithEmailAndPassword(authentiaion, email, password,true)\r\n//         .then((userCredential) => {\r\n          \r\n//           // Signup successful\r\n//           const user = userCredential.user;\r\n//           console.log('Signup successful:', user);\r\n//           navigate('/Home')\r\n//           // Redirect to home or do something else\r\n//         })\r\n//         .catch((error) => {\r\n//           // Signup error\r\n//           setError(error.message);\r\n//           if (error.code === 'auth/email-already-in-use') {\r\n//             toast.error('Email already exists');\r\n            \r\n//           }\r\n//           console.log('Signup error h baby:', error);\r\n//         });\r\n//     };\r\n\r\n\r\n\r\n    \r\n//     useEffect(()=>{\r\n//         setValue(localStorage.getItem('email'))\r\n//         // storing email\r\n//     },[]);\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         backgroundImage: `url(${rpaper})`,\r\n//         backgroundSize: 'cover',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         backgroundPosition: 'center',\r\n//         height: '100vh',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//       }}\r\n//       component=\"div\"\r\n//     >\r\n//       <Box\r\n//         sx={{\r\n//           backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n//           padding: '20px',\r\n//           borderRadius: '20px',\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n//           SignUp\r\n//         </Typography>\r\n//         <form onSubmit={handleSignup}>\r\n//           <TextField\r\n//             id=\"email\"\r\n//             label=\"Email\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//           <TextField\r\n//             id=\"password\"\r\n//             label=\"Password\"\r\n//             variant=\"outlined\"\r\n//             type=\"password\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//           <Button\r\n//           variant=\"contained\" fullWidth type=\"submit\">\r\n//             Signup\r\n//             <ToastContainer/>\r\n//           </Button>\r\n//         </form>\r\n//         <Typography variant=\"body1\" align=\"center\" mt={2}>\r\n//           Already have an account? <Link href=\"Login\">Login</Link>\r\n//         </Typography>\r\n//         <Typography variant=\"body1\" align=\"center\" mt={2}>\r\n//           Or\r\n//           {\r\n//           <Button\r\n//             onClick={ handleClick }\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mt: 2 }}\r\n//           >\r\n//             <img src={google} alt=\"Google Logo\" sx={{ width: 20, height: 20, mr: 1 }} style={{ marginRight: '8px' }} />\r\n//             Signin with Google\r\n//           </Button>\r\n//                 }\r\n//         </Typography>\r\n//       </Box>\r\n\r\n//     </Box>\r\n//   )\r\n// }\r\n\r\n// export default Signup\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}