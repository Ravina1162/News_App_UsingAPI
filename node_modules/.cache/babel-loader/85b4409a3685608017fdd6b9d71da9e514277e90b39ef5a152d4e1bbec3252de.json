{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\New folder (2)\\\\news\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// // import { Button } from '@mui/material'\n// import { AppBar, Grid, Toolbar, Tabs, Tab, Typography, useTheme, useMediaQuery, Button } from '@mui/material';\n// import NewspaperOutlinedIcon from '@mui/icons-material/NewspaperOutlined';\n// import Drawercomp from './Drawercomp';\n// import { useNavigate } from 'react-router-dom';\n\n// const Navbar = ({links}) => {\n//     const navigate = useNavigate()\n//     const theme = useTheme();\n//     const isMatch = useMediaQuery(theme.breakpoints.down('sm'));\n//     const [value, setValue] = useState()//0\n//     const handleLogout = () => {\n//         // sessionStorage.removeItem('Auth Token');\n//         sessionStorage.clear();\n//         navigate('/')\n//     }\n\n//   return (\n//     <div>\n//         <AppBar sx={{backgroundImage:'linear-gradient(90deg, rgba(55,46,210,1) 0%, rgba(24,24,167,0.8744747899159664) 69%, rgba(179,0,255,1) 100%);'}}>\n//             <Toolbar>\n//                {isMatch ? <>\n//                <Typography>\n//                             <NewspaperOutlinedIcon></NewspaperOutlinedIcon>\n//                         </Typography>\n//                <Drawercomp links={links}/>\n//                </>:<Grid sx={{placeItems:'center'}} container>\n//                     <Grid item xs={2}>\n//                         <Typography>\n//                             <NewspaperOutlinedIcon></NewspaperOutlinedIcon>\n//                         </Typography>\n//                     </Grid>\n//                     <Grid item xs={8}>\n//                         <Tabs\n//                           indicatorColor='secondary'\n//                           textColor='inherit'\n//                           value={value}\n//                           onChange={(e,val)=> setValue(val)}>\n//                             {links.map((link,index)=>(\n//                                 <Tab  key={index} label={link}/>\n\n//                             ))}\n//                             <Button onClick={handleLogout}>LOGOUT</Button>\n//                         </Tabs>\n\n//                     </Grid>\n//                     <Grid item xs={2}/>\n\n//                 </Grid>}\n//             </Toolbar>\n//         </AppBar>\n//     </div>\n//   )\n// }\n\n// export default Navbar\n\nimport React, { useState } from 'react';\nimport { AppBar, Tabs, Tab, Button } from '@mui/material';\nimport NewspaperOutlinedIcon from '@mui/icons-material/NewspaperOutlined';\nimport { useNavigate } from 'react-router-dom';\n// import Us from './components/Us';\n// import Bbc from './components/Bbc';\n// import Germany from './components/Germany';\n// import Trump from './components/Trump';\nimport Bbc from './Bbc';\nimport Us from './Us';\nimport Germany from './Germany';\nimport Trump from './Trump';\n\n//     const theme = useTheme();\n//     const isMatch = useMediaQuery(theme.breakpoints.down('sm'));\n//     const [value, setValue] = useState()//0\n//     const handleLogout = () => {\n//         // sessionStorage.removeItem('Auth Token');\n//         sessionStorage.clear();\n//         navigate('/')\n//     }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabs = [\"US\", \"BBC\", \"Germany\", \"Trump\"];\n  const tabContents = [/*#__PURE__*/_jsxDEV(Us, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Bbc, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Germany, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Trump, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleTabChange,\n        children: tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(Tab, {\n          label: tab\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), tabContents[value]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","AppBar","Tabs","Tab","Button","NewspaperOutlinedIcon","useNavigate","Bbc","Us","Germany","Trump","jsxDEV","_jsxDEV","Navbar","_s","value","setValue","handleTabChange","event","newValue","tabs","tabContents","fileName","_jsxFileName","lineNumber","columnNumber","children","position","onChange","map","tab","index","label","onClick","handleLogout","_c","$RefreshReg$"],"sources":["C:/Project/New folder (2)/news/src/components/Navbar.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// // import { Button } from '@mui/material'\r\n// import { AppBar, Grid, Toolbar, Tabs, Tab, Typography, useTheme, useMediaQuery, Button } from '@mui/material';\r\n// import NewspaperOutlinedIcon from '@mui/icons-material/NewspaperOutlined';\r\n// import Drawercomp from './Drawercomp';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n// const Navbar = ({links}) => {\r\n//     const navigate = useNavigate()\r\n//     const theme = useTheme();\r\n//     const isMatch = useMediaQuery(theme.breakpoints.down('sm'));\r\n//     const [value, setValue] = useState()//0\r\n//     const handleLogout = () => {\r\n//         // sessionStorage.removeItem('Auth Token');\r\n//         sessionStorage.clear();\r\n//         navigate('/')\r\n//     }\r\n    \r\n        \r\n\r\n//   return (\r\n//     <div>\r\n//         <AppBar sx={{backgroundImage:'linear-gradient(90deg, rgba(55,46,210,1) 0%, rgba(24,24,167,0.8744747899159664) 69%, rgba(179,0,255,1) 100%);'}}>\r\n//             <Toolbar>\r\n//                {isMatch ? <>\r\n//                <Typography>\r\n//                             <NewspaperOutlinedIcon></NewspaperOutlinedIcon>\r\n//                         </Typography>\r\n//                <Drawercomp links={links}/>\r\n//                </>:<Grid sx={{placeItems:'center'}} container>\r\n//                     <Grid item xs={2}>\r\n//                         <Typography>\r\n//                             <NewspaperOutlinedIcon></NewspaperOutlinedIcon>\r\n//                         </Typography>\r\n//                     </Grid>\r\n//                     <Grid item xs={8}>\r\n//                         <Tabs\r\n//                           indicatorColor='secondary'\r\n//                           textColor='inherit'\r\n//                           value={value}\r\n//                           onChange={(e,val)=> setValue(val)}>\r\n//                             {links.map((link,index)=>(\r\n//                                 <Tab  key={index} label={link}/>\r\n                                \r\n//                             ))}\r\n//                             <Button onClick={handleLogout}>LOGOUT</Button>\r\n//                         </Tabs>\r\n                        \r\n//                     </Grid>\r\n//                     <Grid item xs={2}/>\r\n                    \r\n//                 </Grid>}\r\n//             </Toolbar>\r\n//         </AppBar>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Navbar\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { AppBar, Tabs, Tab, Button } from '@mui/material';\r\nimport NewspaperOutlinedIcon from '@mui/icons-material/NewspaperOutlined';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import Us from './components/Us';\r\n// import Bbc from './components/Bbc';\r\n// import Germany from './components/Germany';\r\n// import Trump from './components/Trump';\r\nimport Bbc from './Bbc';\r\nimport Us from './Us'\r\nimport Germany from './Germany'\r\nimport Trump from './Trump'\r\n\r\n\r\n\r\n\r\n//     const theme = useTheme();\r\n//     const isMatch = useMediaQuery(theme.breakpoints.down('sm'));\r\n//     const [value, setValue] = useState()//0\r\n//     const handleLogout = () => {\r\n//         // sessionStorage.removeItem('Auth Token');\r\n//         sessionStorage.clear();\r\n//         navigate('/')\r\n//     }\r\n\r\nconst Navbar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabs = [\"US\", \"BBC\", \"Germany\", \"Trump\"];\r\n\r\n  const tabContents = [\r\n    <Us />,\r\n    <Bbc />,\r\n    <Germany />,\r\n    <Trump />\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleTabChange}>\r\n          {tabs.map((tab, index) => (\r\n            <Tab key={index} label={tab} />\r\n          ))}\r\n        </Tabs>\r\n        <Button onClick={handleLogout}>LOGOUT</Button>\r\n      </AppBar>\r\n      \r\n      {/* Render the content based on the selected tab value */}\r\n      {tabContents[value]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}